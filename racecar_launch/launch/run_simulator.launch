<?xml version="1.0"?>

<launch>

  <arg name="origin_x" default="0"/>
  <arg name="origin_y" default="0"/>

  <!-- 由于本系统的Odometry数据可以由多个节点发布，而机器人运行只需要1个Odometry数据 -->
  <!-- 当use_xxx_odom被选择为true时，只有该节点会发布(arg odom_frame)的tf数据，并且该节点发布的odom数据会被重新命名为(arg odom_topic) -->
  <arg name="use_gazebo_odom" default="true"/>
  <arg name="odom_gazebo_topic" default="/odom_gazebo"/>

  <arg name="ackermann_topic" default="/cmd_ackermann"/>
  <arg name="base_frame" default="base_footprint"/>
  <arg name="odom_frame" default="odom"/>
  <arg name="odom_topic" default="/odom"/>
  <arg name="world_name" default="building"/>

  <!-- 打开gazebo并且设置机器人和仿真环境 -->
  <include file="$(find racecar_gazebo)/launch/racecar_gazebo.launch">
    <arg name="x_pos" default="$(arg origin_x)"/>
    <arg name="y_pos" default="$(arg origin_y)"/>
    <arg name="world_name" default="$(arg world_name)"/>
  </include>

  <!-- 从gazebo中得到机器人的准确定位数据，用作参考 -->
  <node pkg="racecar_gazebo" name="gazebo_odometry_node" type="gazebo_odometry.py">
    <param name="x_pos" value="$(arg origin_x)"/>
    <param name="y_pos" value="$(arg origin_y)"/>
    <param name="object_name" value="racecar"/>
    <param name="update_rate" value="10"/>
    <param name="publish_tf" value="$(arg use_gazebo_odom)"/>
    <param name="odom_topic" value="$(arg odom_gazebo_topic)"/>
    <param name="base_frame" value="$(arg base_frame)"/>
    <param name="odom_frame" value="$(arg odom_frame)"/>
  </node>

  <!-- 将$(arg odom_gazebo_topic)重命名为$(arg odom_topic)，方便系统使用 -->
  <node name="odom_gazebo_relay" pkg="topic_tools" type="relay" if="$(arg use_gazebo_odom)"
        args="$(arg odom_gazebo_topic) $(arg odom_topic)"/>

  <!-- 使用键盘发布cmd数据 -->
  <node pkg="racecar_control" type="keyboard_teleop.py" name="keyboard_teleop">
    <param name="speed" value="1"/>
    <param name="max_steering_angle" value="0.785398163"/>
    <param name="ackermann_cmd_topic" value="$(arg ackermann_topic)"/>
  </node>

</launch>
