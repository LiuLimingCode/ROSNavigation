imu驱动
<node pkg="art_imu" name="imu" type="art_imu" output="screen">
Publisher:
topic = "/imu_data" data = sensor_msgs::Imu
	geometry_msgs/Quaternion orientation
		float64 x
		float64 y
		float64 z
		float64 w
	##float64[9] orientation_covariance # Row major about x, y, z axes
	geometry_msgs/Vector3 angular_velocity
		float64 x
		float64 y
		float64 z
	##float64[9] angular_velocity_covariance # Row major about x, y, z axes
	geometry_msgs/Vector3 linear_acceleration
	##float64[9] linear_acceleration_covariance # Row major x, y z 

topic = "mag" data = sensor_msgs::MagneticField
	 geometry_msgs/Vector3 magnetic_field # x, y, and z components of the
		                              # field vector in Tesla
		                              # If your sensor does not output 3 axes,
		                              # put NaNs in the components not reported.

	 float64[9] magnetic_field_covariance # Row major about x, y, z axes
		                              # 0 is interpreted as variance unknown
	
topic = "gps" data = sensor_msgs::NavSatFix
	# satellite fix status information
	NavSatStatus status
		int8 STATUS_NO_FIX =  -1        # unable to fix position
		int8 STATUS_FIX =      0        # unaugmented fix
		int8 STATUS_SBAS_FIX = 1        # with satellite-based augmentation
		int8 STATUS_GBAS_FIX = 2        # with ground-based augmentation

		int8 status

		# Bits defining which Global Navigation Satellite System signals were
		# used by the receiver.

		uint16 SERVICE_GPS =     1
		uint16 SERVICE_GLONASS = 2
		uint16 SERVICE_COMPASS = 4      # includes BeiDou.
		uint16 SERVICE_GALILEO = 8

		uint16 service

	# Latitude [degrees]. Positive is north of equator; negative is south.
	float64 latitude

	# Longitude [degrees]. Positive is east of prime meridian; negative is west.
	float64 longitude

	# Altitude [m]. Positive is above the WGS 84 ellipsoid
	# (quiet NaN if no altitude is available).
	float64 altitude

	# Position covariance [m^2] defined relative to a tangential plane
	# through the reported position. The components are East, North, and
	# Up (ENU), in row-major order.
	#
	# Beware: this coordinate system exhibits singularities at the poles.

	float64[9] position_covariance

	# If the covariance of the fix is known, fill it in completely. If the
	# GPS receiver provides the variance of each measurement, put them
	# along the diagonal. If only Dilution of Precision is available,
	# estimate an approximate covariance from that.

	uint8 COVARIANCE_TYPE_UNKNOWN = 0
	uint8 COVARIANCE_TYPE_APPROXIMATED = 1
	uint8 COVARIANCE_TYPE_DIAGONAL_KNOWN = 2
	uint8 COVARIANCE_TYPE_KNOWN = 3

	uint8 position_covariance_type

