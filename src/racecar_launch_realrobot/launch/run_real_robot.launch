<?xml version="1.0"?>

<!-- 启动车的基本传感器和TF -->
<launch>

  <master auto="start"/>

  <!-- 由于本系统的Odometry数据可以由多个节点发布，而机器人运行只需要1个Odometry数据 -->
  <!-- 当use_xxx_odom被选择为true时，只有该节点会发布(arg odom_frame)的tf数据，并且该节点发布的odom数据会被重新命名为(arg odom_topic) -->
  <arg name="use_encoder_speed" default="true"/>
  
  <arg name="odom_rf2o_topic" default="/odom_rf2o"/>
  <arg name="odom_ekf_topic" default="/odom_ekf"/>

  <arg name="base_frame" default="base_footprint"/>
  <arg name="imu_frame" default="imu_link"/>
  <arg name="imu_topic" default="/imu_data"/>
  <arg name="laser_frame" default="laser_link"/>
  <arg name="scan_topic" default="/scan"/>
  <arg name="ackermann_topic" default="/cmd_ackermann"/>
  <arg name="ackermann_std_msgs_topic" default="ackermann_std_msgs"/>
  <arg name="map_frame" default="map"/>
  <arg name="odom_frame" default="odom"/>
  <arg name="odom_topic" default="/odom"/>
  <arg name="odom_speed_std_msgs_topic" default="odom_speed_std_msgs"/>

  <!-- <include file="$(find racecar_description)/launch/racecar_spawn.launch"/> -->

  <node pkg="tf" type="static_transform_publisher" name="base_footprint2base_link" args="0.0 0.0 0.15 0.0 0.0 0.0 /base_footprint /base_link 10"/>
  <node pkg="tf" type="static_transform_publisher" name="base_link2laser_link" args=" 0.09 0.0 0.14 0.0 0.0 0.0 /base_link /laser_link 10"/>
  <node pkg="tf" type="static_transform_publisher" name="base_link2imu" args="0.18 0.0 0.05 0.0 0.0 0.0 /base_link /imu_link 10"/>

  <!-- ls01g 激光雷达传感器 -->
  <include file="$(find ls01g)/launch/ls01g.launch">
    <arg name="scan_topic" value="$(arg scan_topic)"/>
    <arg name="laser_link" value="$(arg laser_frame)"/>
  </include>

  <!-- IMU 姿态传感器 -->
  <include file="$(find art_imu)/launch/imu.launch">
    <arg name="imu_frame" value="$(arg imu_frame)"/>
    <arg name="imu_topic" value="$(arg imu_topic)"/>
  </include>


  <!-- 使用键盘发布cmd数据 -->
    <!-- <node pkg="racecar_control" type="keyboard_teleop.py" namope="keyboard_teleop">
    <param name="speed" value="1"/>
    <param name="max_steering_angle" value="0.785398163"/>
    <param name="ackermann_cmd_topic" value="$(arg ackermann_topic)"/>
  </node> -->

  <!-- 使用遥控手柄发布ackermann数据 -->
  <node name="joy_node" pkg="joy" type="joy_node"/>
  <node name="racecar_joy" pkg="racecar_control" type="racecar_joy.py" output="screen">
    <param name="speed_max" value="1.4"/>
    <param name="max_steering_angle" value="0.6108652382"/>
    <param name="ackermann_cmd_topic" value="$(arg ackermann_topic)"/>
  </node>

  <!-- 下位机控制节点 -->
  <node pkg="art_driver" name="art_driver" type="art_driver_node" output="screen">
    <param name="Angle_P" value="1.0"/>
    <param name="Angle_D" value="0.0"/>
    <param name="ackermann_cmd_topic" value="$(arg ackermann_topic)"/>
  </node>

  <!-- ！！！！！！！！！！！！！！！！！！！！以下为定位！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！ -->

  <!-- http://wiki.ros.org/rf2o_laser_odometry -->
  <!-- RF2O算法：从激光雷达的数据中得到机器人的线速度、角速度数据 -->
  <group unless="$(arg use_encoder_speed)">
    <include file="$(find racecar_launch_realrobot)/launch/includes/rf2o_laser_odometry.launch.xml">
      <arg name="publish_tf" default="true"/>
      <!-- http://wiki.ros.org/rf2o_laser_odometry -->
      <arg name="odom_frame_id" default="$(arg odom_frame)"/>
      <arg name="rf2o_odom_topic" default="$(arg odom_rf2o_topic)"/>
      <arg name="laser_scan_topic" default="$(arg scan_topic)"/>
      <arg name="base_frame_id" default="$(arg base_frame)"/>
      <arg name="invert_linear_data" default="true"/>
      <arg name="invert_position_data" default="true"/>
    </include>
  </group>

  <!-- 从编码器中得到车模的实际速度,并替换rf2o中的x轴线速度 -->
  <group if="$(arg use_encoder_speed)">
    <node name="encoder_speed" pkg="art_driver" type="encoder_speed_node" output="screen">
      <param name="serial_port" value="/dev/car"/>
      <param name="odom_frame_id" value="$(arg odom_frame)"/>
      <param name="base_frame_id" value="$(arg base_frame)"/>
      <param name="odom_pub_topic" value="$(arg odom_rf2o_topic)"/>
      <param name="publish_frequency" value="50"/>
    </node>
  </group>

  <!-- 将rf2o的odometry数据转化为path数据,以方便显示 -->
  <!-- <include file="$(find odometry_to_path)/launch/odometry_to_path.launch" if="$(arg odom_to_path)">
    <arg name="node_name" default="odom_rf2o_to_path_node"/>
    <arg name="update_frequncy" default="10.0"/>
    <arg name="odom_buffer_num" default="2000"/>
    <arg name="odom_sub_topic" default="$(arg odom_rf2o_topic)"/>
    <arg name="path_pub_topic" default="$(arg path_rf2o_topic)"/>
  </include> -->

  <!-- http://docs.ros.org/kinetic/api/robot_localization/html/index.html -->
  <!-- 扩展卡尔曼滤波(EKF)：融合RF2O数据和IMU数据得到更加准确的定位数据 -->
  <include file="$(find racecar_launch_realrobot)/launch/includes/robot_localization.launch.xml">
    <arg name="publish_tf" default="true"/>
    <arg name="odom_frame" default="$(arg odom_frame)"/>
    <arg name="odom_pub_topic" default="$(arg odom_topic)"/>
    <arg name="imu0_topic" default="$(arg imu_topic)"/>
    <arg name="odom0_topic" default="$(arg odom_rf2o_topic)"/>
    <arg name="map_frame" default="$(arg map_frame)"/>
    <arg name="base_link_frame" default="$(arg base_frame)"/>
    <arg name="world_frame" default="$(arg odom_frame)"/>
    <arg name="param_file" default="$(find racecar_launch_realrobot)/param/ekf_localization/ekf.yaml"/>
  </include>

  <!-- 将ekf的odometry数据转化为path数据,以方便显示 -->
  <!-- <include file="$(find odometry_to_path)/launch/odometry_to_path.launch" if="$(arg odom_to_path)">
    <arg name="node_name" default="odom_ekf_to_path_node"/>
    <arg name="update_frequncy" default="10.0"/>
    <arg name="odom_buffer_num" default="2000"/>
    <arg name="odom_sub_topic" default="$(arg odom_ekf_topic)"/>
    <arg name="path_pub_topic" default="$(arg path_ekf_topic)"/>
  </include> -->

  <!-- 重命名odom的topic，方便后面使用 -->
  <!-- <node name="odom_ekf_relay" pkg="topic_tools" type="relay" args="$(arg odom_ekf_topic) $(arg odom_topic)"/> -->

</launch>