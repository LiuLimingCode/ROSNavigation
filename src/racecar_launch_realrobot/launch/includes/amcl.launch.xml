<?xml version="1.0"?>

<launch>

  <arg name="map_topic"/>
  <arg name="scan_topic"/>
  <arg name="base_frame"/>
  <arg name="map_frame"/>
  <arg name="odom_frame"/>

  <arg name="init_x" default="0" />
  <arg name="init_y" default="0" />
  <arg name="init_a" default="0" />

  <arg name="use_map_topic"/>
  <arg name="first_map_only"/>

  <node pkg="amcl" type="amcl" name="amcl" output="screen">

    <remap from="map" to="$(arg map_topic)"/>
    <remap from="scan" to="$(arg scan_topic)"/>
    <param name="odom_frame_id" value="$(arg odom_frame)"/>   #Which frame to use for odometry. (default: "odom")
    <param name="base_frame_id" value="$(arg base_frame)"/>   #Which frame to use for the robot base (default: "base_link")
    <param name="global_frame_id" value="$(arg map_frame)"/>  #The name of the coordinate frame published by the localization system (default: "map")
    <param name="tf_broadcast" value="true"/>  #Set this to false to prevent amcl from publishing the transform between the global frame and the odometry frame. (default: true)
    <param name="use_map_topic" value="$(arg use_map_topic)"/> #When set to true, AMCL will subscribe to the map topic rather than making a service call to receive its map. (default: false)
    <param name="first_map_only" value="$(arg first_map_only)"/>#When set to true, AMCL will only use the first map it subscribes to, rather than updating each time a new one is received. (default: false)

    <!-- Overall filter parameters -->
    <param name="min_particles" value="500"/>      #Minimum allowed number of particles. (default: 100)
    <param name="max_particles" value="5000"/>     #Maximum allowed number of particles. (default: 5000)
    <param name="kld_err" value="0.05"/>           #Maximum error between the true distribution and the estimated distribution. (default: 0.01)
    <param name="kld_z" value="0.99"/>             #Upper standard normal quantile for (1 - p), where p is the probability that the error on the estimated distrubition will be less than kld_err. (default: 0.99)

    <param name="update_min_d" value="0.0"/>       #Translational movement required before performing a filter update. (default: 0.2 meters)
    <param name="update_min_a" value="0.1"/>       #Rotational movement required before performing a filter update. (default: π/6.0 radians)
    <param name="resample_interval" value="2"/>    #Number of filter updates required before resampling. (default: 2)
    <param name="transform_tolerance" value="0.2"/>#Time with which to post-date the transform that is published, to indicate that this transform is valid into the future. (0.1 seconds)
    <param name="recovery_alpha_slow" value="0.0"/>#Exponential decay rate for the slow average weight filter, used in deciding when to recover by adding random poses. A good value might be 0.001. (default: 0.0 (disabled))
    <param name="recovery_alpha_fast" value="0.1"/>#Exponential decay rate for the fast average weight filter, used in deciding when to recover by adding random poses. A good value might be 0.1. (default: 0.0 (disabled))

    <param name="initial_pose_x" value="$(arg init_x)"/>#Initial pose mean (x), used to initialize filter with Gaussian distribution. (default: 0.0 meters)
    <param name="initial_pose_y" value="$(arg init_y)"/>#Initial pose mean (y), used to initialize filter with Gaussian distribution. (default: 0.0 meters)
    <param name="initial_pose_a" value="$(arg init_a)"/>#Initial pose mean (yaw), used to initialize filter with Gaussian distribution. (default: 0.0 radians)
    <param name="initial_cov_xx" value="0.25"/>         #Initial pose covariance (x*x), used to initialize filter with Gaussian distribution. (default: 0.5*0.5 meters)
    <param name="initial_cov_yy" value="0.25"/>         #Initial pose covariance (y*y), used to initialize filter with Gaussian distribution. (default: 0.5*0.5 meters)
    <param name="initial_cov_aa" value="0.2"/>          #Initial pose covariance (yaw*yaw), used to initialize filter with Gaussian distribution. (default: (π/12)*(π/12) radian)

    <param name="gui_publish_rate" value="30.0"/>       #Maximum rate (Hz) at which scans and paths are published for visualization, -1.0 to disable. (default: -1.0 Hz)
    <param name="save_pose_rate" value="0.5"/>          #Maximum rate (Hz) at which to store the last estimated pose and covariance to the parameter server, in the variables ~initial_pose_* and ~initial_cov_*. This saved pose will be used on subsequent runs to initialize the filter. -1.0 to disable. (default: 0.5 Hz)


    <!-- Laser model parameters -->
    <param name="laser_min_range" value="-1.0"/>  #Minimum scan range to be considered; -1.0 will cause the laser's reported minimum range to be used. (default: -1.0)
    <param name="laser_max_range" value="-1.0"/>  #Maximum scan range to be considered; -1.0 will cause the laser's reported maximum range to be used. (default: -1.0)
    <param name="laser_max_beams" value="30"/>    #How many evenly-spaced beams in each scan to be used when updating the filter. (default: 30)
    <param name="laser_z_hit" value="0.5"/>       #Mixture weight for the z_hit part of the model. (default: 0.95)
    <param name="laser_z_short" value="0.05"/>    #Mixture weight for the z_short part of the model. (default: 0.1)
    <param name="laser_z_max" value="0.05"/>      #Mixture weight for the z_max part of the model. (default: 0.05)
    <param name="laser_z_rand" value="0.5"/>      #Mixture weight for the z_rand part of the model. (default: 0.05)
    <param name="laser_sigma_hit" value="0.2"/>   #Standard deviation for Gaussian model used in z_hit part of the model. (default: 0.2 meters)
    <param name="laser_lambda_short" value="0.1"/>#Exponential decay parameter for z_short part of model. (default: 0.1)
    <param name="laser_likelihood_max_dist" value="2.0"/>    #Maximum distance to do obstacle inflation on map, for use in likelihood_field model. (default:  2.0 meters)
    <param name="laser_model_type" value="likelihood_field"/>#Which model to use, either beam, likelihood_field, or likelihood_field_prob (same as likelihood_field but incorporates the beamskip feature, if enabled). (default: "likelihood_field")


    <!-- Odometry model parameters -->
    <param name="odom_model_type" value="diff-corrected"/> #Which model to use, either "diff", "omni", "diff-corrected" or "omni-corrected". (default: "diff")
    <param name="odom_alpha1" value="0.2"/>      #Specifies the expected noise in odometry's rotation estimate from the rotational component of the robot's motion. (default: 0.2)
    <param name="odom_alpha2" value="0.2"/>      #Specifies the expected noise in odometry's rotation estimate from translational component of the robot's motion. (default: 0.2)
    <param name="odom_alpha3" value="0.2"/>      #Specifies the expected noise in odometry's translation estimate from the translational component of the robot's motion. (default: 0.2)
    <param name="odom_alpha4" value="0.2"/>      #Specifies the expected noise in odometry's translation estimate from the rotational component of the robot's motion. (default: 0.2)
    <param name="odom_alpha5" value="0.2"/>      #Translation-related noise parameter (only used if model is "omni"). (default: 0.2)

  </node>

</launch>