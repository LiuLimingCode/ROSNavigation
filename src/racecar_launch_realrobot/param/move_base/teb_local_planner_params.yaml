# teb_local_planner 资料见 http://wiki.ros.org/teb_local_planner
#                   教程见 http://wiki.ros.org/teb_local_planner/Tutorials （必看）
# 有些参数与官方资料描述不一致，建议使用 rosrun rqt_reconfigure rqt_reconfigure 调整参数

TebLocalPlannerROS:

 #odom_topic: odom
    
 # Trajectory
  
 teb_autosize: True
 dt_ref: 0.3  #默认0.3,若系统不好则增加加速优化 
 dt_hysteresis: 0.1
 max_samples: 500 
 global_plan_overwrite_orientation: True
 allow_init_with_backwards_motion: false  # 允许倒退
 max_global_plan_lookahead_dist: 6  #
 global_plan_viapoint_sep: -1
 global_plan_prune_distance: 1 
 exact_arc_length: False 
 feasibility_check_no_poses: 2
 publish_feedback: False
    
 ###################### 仿真车模的各项参数  ######################
 # 速度     1.0    1.5    2.0    2.5                (经gazebo测试)
 # 转弯半径  0.65   0.85   1.05   1.125              (经gazebo测试)
 # 角速度   1~1.7  1~2.4  1~2.9  1~3.5              (经gazebo测试，不清楚为什么是波动的，理论上该数据 = 转弯半径 / 速度)
 # *角速度  1.538  1.765  1.905  2.222              (平均角速度 = 转弯半径 / 速度 理论计算的得到)
 # wheelbase为0.335,车轮的最大打角0.785398163,即45°   (urdf文件描述)
 #wheelbase为0.335,车轮的最大打角0.6108652382,即35° (实际车模)
 
 ######################### 参数调试经验 #########################
 # 车模属于阿克曼转向模型，根据几何关系：当前转弯半径 = 当前速度 / 当前角速度, 当前打角 = atan(wheelbase / 当前转弯半径)
 # 经验1：
 # 根据z该公式，当车模急转弯时候，当前转弯半径 = min_turning_radius（假设为0.6），那么急转弯时候的打角为atan(0.335/0.6)=0.51，该值小于机器人的最大打角0.78
 # 因此可以看到一个现象：当车模急转弯时，车模无法过弯，而且，teb输出的期望打角远远小于车模的最大打角
 # 建议是适当增大wheelbase参数，尽管根据该值的定义，该值应该根据urdf文件确定，wheelbase的调整范围为(0.335~tan(45°)*min_turning_radius)

      
 #max_vel_x: 3.5 # 最大X轴线速度
 max_vel_x_backwards: 0.5   #最大允许倒退速度
 max_vel_y: 0.0
 max_vel_theta: 5 # the angular velocity is also bounded by min_turning_radius in case of a carlike robot (r = v / omega)
 acc_lim_x: 3  #x轴加速度约束
 acc_lim_theta: 10 

 # ********************** Carlike robot parameters ********************
 min_turning_radius: 0.4784      # 根据(当前转弯半径 = 当前速度 / 当前角速度)，因为速度满足 v = 当前转弯半径 * 当前角速度，当机器人急转弯时，可以得到 急转弯过弯速度 = min_turning_radius * 当前角速度
 wheelbase: 0.335                # 前轮到后轮的距离
 cmd_angle_instead_rotvel: True # stage simulator takes the angle instead of the rotvel as input (twist message)
 # ********************************************************************

 # 机器人的 footprint 
 footprint_model: # types: "point", "circular", "two_circles", "line", "polygon"
   type: "line"
   radius: 0.2 # for type "circular"
   line_start: [-0.2, 0.0] # for type "line"
   line_end: [0.2, 0.0] # for type "line"
   front_offset: 0.2 # for type "two_circles"
   front_radius: 0.2 # for type "two_circles"
   rear_offset: 0.2 # for type "two_circles"
   rear_radius: 0.2 # for type "two_circles"
   vertices: [ [0.25, -0.05], [0.18, -0.05], [0.18, -0.18], [-0.19, -0.18], [-0.25, 0], [-0.19, 0.18], [0.18, 0.18], [0.18, 0.05], [0.25, 0.05] ] # for type "polygon"

 # GoalTolerance
    
 xy_goal_tolerance: 0.2
 yaw_goal_tolerance: 3.14
 free_goal_vel: True
 complete_global_plan: True
    
 # Obstacles
    
 min_obstacle_dist: 0.3 # 障碍物到机器人的 footprint 的最小距离
 inflation_dist: 0.5  # 障碍物膨胀，起到的作用和 min_obstacle_dist 差不多，不清楚区别
 include_costmap_obstacles: True  
 costmap_obstacles_behind_robot_dist: 3.0  # 考虑机器人身后障碍物的范围
 obstacle_poses_affected: 10    #障碍造成影响系数，系统性能不佳则减少此参数

 dynamic_obstacle_inflation_dist: 0.4  # 动态障碍物膨胀
 include_dynamic_obstacles: True  #使能动态障碍

#  ## Costmap converter plugin   
#  #costmap_converter_plugin: "costmap_converter::CostmapToPolygonsDBSMCCH"
#  costmap_converter_plugin: "costmap_converter::CostmapToLinesDBSRANSAC"
#  #costmap_converter_plugin: "costmap_converter::CostmapToLinesDBSMCCH"
#  #costmap_converter_plugin: "costmap_converter::CostmapToPolygonsDBSConcaveHull"
#  #costmap_converter_plugin: "" # deactivate plugin
#  costmap_converter_spin_thread: True
#  costmap_converter_rate: 20

 
#   ## Configure plugins (namespace move_base/TebLocalPlannerROS/PLUGINNAME)
#   ## The parameters must be added for each plugin separately
#  costmap_converter/CostmapToLinesDBSRANSAC:
#   cluster_max_distance: 0.1
#   cluster_min_pts: 2
#   ransac_inlier_distance: 0.15
#   ransac_min_inliers: 10
#   ransac_no_iterations: 2000
#   ransac_remainig_outliers: 3
#   ransac_convert_outlier_pts: True
#   ransac_filter_remaining_outlier_pts: True
#   convex_hull_min_pt_separation: 0.1

 # Optimization 路径优化
    
 no_inner_iterations: 3
 no_outer_iterations: 2
 optimization_activate: True  
 optimization_verbose: False
 penalty_epsilon: 0.1      # 功能类似于 min_obstacle_dist
 obstacle_cost_exponent: 4
 weight_max_vel_x: 2       # 机器人线速度的权重
 weight_max_vel_theta: 1
 weight_acc_lim_x: 1
 weight_acc_lim_theta: 1
 weight_kinematics_nh: 1000
 weight_kinematics_forward_drive: 1
 weight_kinematics_turning_radius: 50
 weight_optimaltime: 1 # must be > 0    #直道上快速加速，切线过弯
 weight_shortest_path: 0.0   # 寻找最短路径的权重
 weight_obstacle: 100         # 躲避障碍物的权重
 weight_inflation: 0.4
 weight_dynamic_obstacle: 10 # not in use yet
 weight_dynamic_obstacle_inflation: 0.2
 weight_viapoint: 1
 weight_adapt_factor: 2

 # Homotopy Class Planner

 enable_homotopy_class_planning: True
 enable_multithreading: True
 max_number_classes: 4
 selection_cost_hysteresis: 1.0
 selection_prefer_initial_plan: 0.95
 selection_obst_cost_scale: 1.0
 selection_alternative_time_cost: False

 roadmap_graph_no_samples: 15
 roadmap_graph_area_width: 5
 roadmap_graph_area_length_scale: 1.0
 h_signature_prescaler: 0.5
 h_signature_threshold: 0.1
 obstacle_heading_threshold: 0.45
 switching_blocking_period: 0.0
 viapoints_all_candidates: True
 delete_detours_backwards: True
 max_ratio_detours_duration_best_duration: 3.0
 visualize_hc_graph: False
 visualize_with_time_as_z_axis_scale: False

# Recovery
 
 shrink_horizon_backup: True
 shrink_horizon_min_duration: 10
 oscillation_recovery: True
 oscillation_v_eps: 0.1
 oscillation_omega_eps: 0.1
 oscillation_recovery_min_duration: 10
 oscillation_filter_duration: 10
